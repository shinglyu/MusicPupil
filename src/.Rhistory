source('multiLinearRegress.R')
test
test()
a = test()
a
exit
quit
q()
source('model
)
';
source('modelMultiLinearRegress.R')
y = [2, 3;3,4]
y = c(c(1, 2), c(3, 4))
y
y <- data.frame()
y
y <- data.frame(y1 = c(1,2,4,4), y2=c(3,4,5,2))
y
x <- data.frame(x1 = c(1, 2,4,5))
x
data.frame(x, y)
lm(y~x, data=data.frame(y=y,x=x))
lm(y~x, data=data.frame(y=y,x=x))
data.frame(x=x,y=y)
lm(y~x)
lm(c(y.y1, y.y2)~x)
y.y1
y[y1]
y
y$y1
lm(x~y)
x
lm(x~y, data=data.frame(x=x,y=y))
x~y
lm(x~y)
lm(x~y$y1)
data.frame(x.y)
data.frame(x,y)
data.frame(x1~y1*y2)
data.frame(x1~y1*y2, data=data.frame(x,y))
data.frame(x1~y1+y2, data=data.frame(x,y))
lm(x1~y1*y2, data=data.frame(x,y))
lm(c(y1, y2) ~ x, data=data.frame(x,y))
lm(c(y1, y2) ~ x1, data=data.frame(x,y))
y1
lm(cbind(y1, y2) ~ x1, data=data.frame(x,y))
quit
q()
source('modelMultiLinearRegress.R')
model = c(1,2,3,)
model = c(1,2,3)
saveRModel(model, 'haha.rda')
ls
ls()
quit
q()
str(data.frame())
source('modelMultiLinearRegress.R')
load('../output/model.bin')
model
formula
model
perdict(model, data.frame(posInPhrasePercent = c(1,2,3,4,5))
)
predict(model, data.frame(posInPhrasePercent = c(1,2,3,4,5)))
formula
perdict
quit
q()
load('../output/model.bin')
model
q()
load('../output/model.bin')
model
formula
q()
source('modelMultiLinearRegress.R')
q()
load('../output/model.bin')
model
fum
fmu
perdict(model)
predict(model)
predict(model, data.frame(fmu=3)
)
predict(model, data.frame(posInPhrasePercent=3))
predict(model, data.frame(fmu=c(1,2,4))
)
predict(model, data.frame(posInPhrasePercent=c(3,3,4))
)
quit
q()
load('../output/model.bin')
perdict(model, data.frame(posInPhrasePercent=c(1,2)))
predict(model, data.frame(posInPhrasePercent=c(1,2)))
q()
lm(c(a, b) ~ x, data.frame(a=c(1,2), b=c(2,5), x=c(5,4)))
lm(c(a, b) ~ x, data.frame(a=c(1,2), b=c(2,5), x=c(5,4)))
lm(c(a, b) ~ x, data.frame(a=c(1,2), b=c(2,5), x=c(5,4))
)
lm(c(a, b) ~ x, data = data.frame(a=c(1,2), b=c(2,5), x=c(5,4))
)
data.frame(a = c(1,2,3), b=c(2,5,2), x=c(1,2,5))
d = data.frame(a = c(1,2,3), b=c(2,5,2), x=c(1,2,5))
lm(c(a, b) ~ x, data = d)
lm(c(a,b) ~ x*a*b, data = d)
len(x)
length(x)
x
x
clear
clearn
clean
lm(c(a, b) ~ d$x, data = d)
lm(c(d$a, d$b) ~ d$x, data = d)
d$x
d$a
c(d$a, d$b)
lm(cbind(a, b) ~ x, data = d)
mod = lm(cbind(a, b) ~ x, data = d)
mod
predict(mod, data.frame(x=c(1)))
out = predict(mod, data.frame(x=c(1)))
out
out = predict(mod, data.frame(x=c(1,3,4,5)))
out
lm(cbind(a) ~ x, data = d)
mod = lm(cbind(a) ~ x, data = d)
out = predict(mod, data.frame(x=c(1,3,4,5)))
out
mod = lm(a ~ x, data = d)
mod
out = predict(mod, data.frame(x=cbind(1,3,4,5)))
d
d$x
mod = lm(cbind(a, b) ~ x, data = d)
mod
cbind(d$a, d$)
cbind(d$a, d$b)
cbind(d$a, d$b) ~ d$x
x
d$x
d = data.frame(a = c(2,4,6), b=c(3,6,9), x = c(1,2,3))
d
mod = lm(cbind(a, b) ~ x, data = d)
mod
perdict(mod, data.frame(x=c(3,4))
)
predict(mod, data.frame(x=c(3,4)))
mod = lm(a ~ x, data = d)
perdict(mod, data.frame(x=c(3,4))
)
predict(mod, data.frame(x=c(3,4)))
q()
source('modelMultiLinearRegress.R')
data.frame({'PosInPhrasePercent': [0.0, 0.25, 0.5, 0.75], 'BeatStrength': [1.0, 0.25, 0.5, 0.25], 'PitchDiffNextMidiNum': [4, 3, -7, 0], 'Beat': [1.0, 2.0, 3.0, 4.0], 'PitchDiffPrevMidiNum': [0, -4, -3, 7], 'PitchMidiNum': [60, 64, 67, 60]}
Warning message:
data.frame({'PosInPhrasePercent': [0.0, 0.25, 0.5, 0.75], 'BeatStrength': [1.0, 0.25, 0.5, 0.25], 'PitchDiffNextMidiNum': [4, 3, -7, 0], 'Beat': [1.0, 2.0, 3.0, 4.0], 'PitchDiffPrevMidiNum': [0, -4, -3, 7], 'PitchMidiNum': [60, 64, 67, 60]})
data.frame('PosInPhrasePercent' = [0[aB.0, 0.25, 0.5, 0.75], 'BeatStrength': [1.0, 0.25, 0.5, 0.25], 'PitchDiffNextMidiNum': [4, 3, -7, 0], 'Beat': [1.0, 2.0, 3.0, 4.0], 'PitchDiffPrevMidiNum': [0, -4, -3, 7], 'PitchMidiNum': [60, 64, 67, 60]})
q()
source('modelMultiLinearRegress.R')
load('../output/debug_genFeat.rda')
scoreFeats
q()
source('utest_modelMultiLinearRegress.R')
quit
q()
source('utest_modelMultiLinearRegress.R')
data
scoreFeats
model
lm(model, scoreFeats)
predict(model, scoreFeats)
predict(model, scoreFeats)
q()
